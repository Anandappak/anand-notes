nodejs ssl
const axios = require('axios');
const fs = require('fs');
const FormData = require('form-data');

// Load the SSL certificate files
const serverCert = fs.readFileSync('server.crt');
const serverKey = fs.readFileSync('server.key');
const serverTrust = fs.readFileSync('server-trust.pem');

// Set up axios instance with SSL certificate
const axiosInstance = axios.create({
  httpsAgent: {
    cert: serverCert,
    key: serverKey,
    ca: serverTrust
  }
});

// Function to authenticate and get token
async function getToken(username, password) {
  try {
    const response = await axiosInstance.post('https://auth-api.com/token', {
      username: username,
      password: password
    });
    return response.data.token;
  } catch (error) {
    console.error('Error getting token:', error.response.data);
    throw error;
  }
}

// Function to post data with token
async function postDataWithToken(token, file1, file2) {
  try {
    const formData = new FormData();
    formData.append('file1', fs.createReadStream(file1));
    formData.append('file2', fs.createReadStream(file2));

    const response = await axiosInstance.post('https://api.com/post', formData, {
      headers: {
        'Authorization': `Bearer ${token}`,
        ...formData.getHeaders()
      }
    });

    console.log('Response:', response.data);
  } catch (error) {
    console.error('Error posting data:', error.response.data);
    throw error;
  }
}

// Example usage
(async () => {
  try {
    const username = 'your_username';
    const password = 'your_password';

    // Get token
    const token = await getToken(username, password);

    // Post data with token
    await postDataWithToken(token, 'file1.txt', 'file2.txt');
  } catch (error) {
    console.error('Error:', error);
  }
})();
